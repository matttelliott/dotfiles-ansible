# https://starship.rs/config/#prompt
format = """
[$username ](fg:black bg:blue)[](bg:black fg:blue)\
[$directory](fg:blue bg:black)[](bg:blue fg:black)\
[$git_branch $git_commit ](fg:black bg:blue)[$git_status](fg:red bg:blue bold)[](fg:blue bg:black)\
$c\
$elixir\
$elm\
$golang\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
[](bg:blue fg:black)\
$docker_context\
[](fg:blue bg:none)\
$fill\
[$cmd_duration$status](fg:black)\
$line_break\
$time\
[  ](fg:cyan)
"""

right_format = """$jobs"""

[fill]
symbol = " "
style = ""

[line_break]
disabled = false
# Disable the blank line at the start of the prompt
add_newline = false

# You can also replace your username with a neat symbol like  to save some space
[username]
show_always = true
style_user = "bg:blue fg:black"
style_root = "bg:blue fg:black"
format = " $user "

[status]
disabled = false
success_symbol = ""
format = '\[$symbol$common_meaning$signal_name$maybe_int\] '

[cmd_duration]
min_time = 0
show_milliseconds = true
format = "took $duration "

# Battery disabled
[battery]
disabled = true

[directory]
format = " $path "
truncation_length = 3
truncation_symbol = "…/"
home_symbol = "  ~ "

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "  Documents"
"Desktop" = "  Desktop"
"Downloads" = "  Downloads"
"Music" = " ﱘ Music"
"Pictures" = "  Pictures"
"Projects" = "  Projects"
"dotfiles" = "  dotfiles"

# Keep in mind that the order matters. For example:
# "Important Documents" = "  "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important  " = "  "

[c]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[docker_context]
symbol = " "
style = "bg:blue fg:black"
format = '[ $symbol $context ]($style) $path'

[elixir]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[elm]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[git_branch]
symbol = " "
format = "$symbol $branch"

[git_commit]
commit_hash_length = 4
only_detached = false
tag_disabled = false
format = "\\($hash$tag\\)"

[git_status]
style = "bg:blue fg:black"
format = '$all_status$ahead_behind'

[jobs]
threshold = 1
number_threshold = 1
style = "fg:cyan"

[golang]
symbol = " "
style = "fg:blue bg:black"
format = '[ $symbol ($version) ]($style)'

[haskell]
symbol = " "
style = "fg:blue bg:black"
format = '[ $symbol ($version) ]($style)'

[java]
symbol = " "
style = "fg:blue bg:black"
format = '[ $symbol ($version) ]($style)'

[julia]
symbol = " "
style = "fg:blue bg:black"
format = '[ $symbol ($version) ]($style)'

[nodejs]
symbol = ""
style = "fg:blue bg:black"
format = '[ $symbol ($version) ]($style)'

[nim]
symbol = " "
style = "fg:blue bg:black"
format = '[ $symbol ($version) ]($style)'

[rust]
symbol = ""
style = "fg:blue bg:black"
format = '[ $symbol ($version) ]($style)'

[time]
disabled = false
time_format = "%T"
format = '$time'



# Colors
# local util = require("tokyonight.util")

# local M = {}

# ---@class Palette
# M.default = {
  # none = "NONE",
  # bg_dark = "#1f2335",
  # bg = "#24283b",
  # bg_highlight = "#292e42",
  # terminal_black = "#414868",
  # fg = "#c0caf5",
  # fg_dark = "#a9b1d6",
  # fg_gutter = "black",
  # dark3 = "#545c7e",
  # comment = "#565f89",
  # dark5 = "#737aa2",
  # blue0 = "#3d59a1",
  # blue = "blue",
  # cyan = "#7dcfff",
  # blue1 = "#2ac3de",
  # blue2 = "#0db9d7",
  # blue5 = "#89ddff",
  # blue6 = "#b4f9f8",
  # blue7 = "#394b70",
  # magenta = "#bb9af7",
  # magenta2 = "#ff007c",
  # purple = "#9d7cd8",
  # orange = "#ff9e64",
  # yellow = "#e0af68",
  # green = "#9ece6a",
  # green1 = "cyan",
  # green2 = "#41a6b5",
  # teal = "#1abc9c",
  # red = "#f7768e",
  # red1 = "#db4b4b",
  # git = { change = "#6183bb", add = "#449dab", delete = "#914c54" },
  # gitSigns = {
    # add = "#266d6a",
    # change = "#536c9e",
    # delete = "red",
  # },
# }

# M.night = {
  # bg = "#1a1b26",
  # bg_dark = "#16161e",
# }
# M.day = M.night

# M.moon = function()
  # local ret = {
    # none = "NONE",
    # bg_dark = "#1e2030", --
    # bg = "#222436", --
    # bg_highlight = "#2f334d", --
    # terminal_black = "#444a73", --
    # fg = "#c8d3f5", --
    # fg_dark = "#828bb8", --
    # fg_gutter = "black",
    # dark3 = "#545c7e",
    # comment = "#7a88cf", --
    # dark5 = "#737aa2",
    # blue0 = "#3e68d7", --
    # blue = "#82aaff", --
    # cyan = "#86e1fc", --
    # blue1 = "#65bcff", --
    # blue2 = "#0db9d7",
    # blue5 = "#89ddff",
    # blue6 = "#b4f9f8", --
    # blue7 = "#394b70",
    # purple = "#fca7ea", --
    # magenta2 = "#ff007c",
    # magenta = "#c099ff", --
    # orange = "#ff966c", --
    # yellow = "#ffc777", --
    # green = "#c3e88d", --
    # green1 = "#4fd6be", --
    # green2 = "#41a6b5",
    # teal = "#4fd6be", --
    # red = "#ff757f", --
    # red1 = "#c53b53", --
  # }
  # ret.git = {
    # change = util.blend(ret.blue, ret.bg, "ee"),
    # add = util.blend(ret.green, ret.bg, "ee"),
    # delete = util.blend(ret.red, ret.bg, "dd"),
  # }
  # ret.gitSigns = {
    # change = util.blend(ret.blue, ret.bg, "66"),
    # add = util.blend(ret.green, ret.bg, "66"),
    # delete = util.blend(ret.red, ret.bg, "aa"),
  # }
  # return ret
# end
# 
# ---@return ColorScheme
# function M.setup(opts)
  # opts = opts or {}
  # local config = require("tokyonight.config")
# 
  # local palette = M[config.options.style] or {}
  # if type(palette) == "function" then
    # palette = palette()
  # end
# 
  # -- Color Palette
  # ---@class ColorScheme: Palette
  # local colors = vim.tbl_deep_extend("force", M.default, palette)
# 
  # util.bg = colors.bg
  # util.day_brightness = config.options.day_brightness
# 
  # colors.diff = {
    # add = util.darken(colors.green2, 0.15),
    # delete = util.darken(colors.red1, 0.15),
    # change = util.darken(colors.blue7, 0.15),
    # text = colors.blue7,
  # }
# 
  # colors.git.ignore = colors.dark3
  # colors.black = util.darken(colors.bg, 0.8, "#000000")
  # colors.border_highlight = colors.blue0
  # colors.border = colors.black
# 
  # -- Popups and statusline always get a dark background
  # colors.bg_popup = colors.bg_dark
  # colors.bg_statusline = colors.bg_dark
# 
  # -- Sidebar and Floats are configurable
  # colors.bg_sidebar = config.options.styles.sidebars == "transparent" and colors.none
    # or config.options.styles.sidebars == "dark" and colors.bg_dark
    # or colors.bg
# 
  # colors.bg_float = config.options.styles.floats == "transparent" and colors.none
    # or config.options.styles.floats == "dark" and colors.bg_dark
    # or colors.bg
# 
  # colors.bg_visual = util.darken(colors.blue0, 0.7)
  # colors.bg_search = colors.blue0
  # colors.fg_sidebar = colors.fg_dark
# 
  # colors.error = colors.red1
  # colors.warning = colors.yellow
  # colors.info = colors.blue2
  # colors.hint = colors.teal
# 
  # config.options.on_colors(colors)
  # if opts.transform and config.is_day() then
    # util.invert_colors(colors)
  # end
# 
  # return colors
# end

# return M
